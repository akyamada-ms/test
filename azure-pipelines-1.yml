# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  branches:
    include:
    - master
    - hotfix/*
    - release/*
    - develop/*
    - feature/*
  paths:
    exclude:
    - manifests/*

pr:
  branches:
    include:
      - master
      - release/*
      - develop/*
  paths:
    exlude:
    - manifests/*

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '10be8273-0e36-43b9-ad70-ee71cbef8efd'
  imageRepository: 'kstest'
  containerRegistry: 'ymdtestreg.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'myregkey'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  
stages:

# ********** トリガー条件 : コミット **********
# トリガー条件 : Feature ブランチに対するコミットが発生
- stage: FeatureBuild
  condition: and(eq(variables['Build.SourceBranch'], 'refs/heads/feature/*'), in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI'))
  displayName: Featre Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          
    - upload: manifests
      artifact: manifests

# トリガー条件 : develop ブランチに対するコミットが発生
- stage: DevelopBuild
  condition: and(eq(variables['Build.SourceBranch'], 'refs/heads/develop/*'), in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI'))
  displayName: Develop Build stage
  jobs:  

# トリガー条件 : release ブランチに対するコミットが発生
- stage: ReleaseBuild
  condition: and(eq(variables['Build.SourceBranch'], 'refs/heads/release/*'), in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI'))
  displayName: Release Build stage
  jobs:  

# トリガー条件 : hotfix ブランチに対するコミットが発生
- stage: HotfixBuild
  condition: and(eq(variables['Build.SourceBranch'], 'refs/heads/hotfix/*'), in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI'))
  displayName: Hotfix Build stage
  jobs:  

# トリガー条件 : master ブランチに対するコミット
- stage: MasterBuild
  condition: and(eq(variables['Build.SourceBranch'], 'refs/heads/master'), in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI'))
  displayName: Master Build stage
  jobs:  


# ********** トリガー条件 : Pull Request **********
# トリガー条件 : develop ブランチをターゲットとして Pull Request が発生
- stage: DevelopBuild
  condition: and(eq(variables['System.PullRequest.TargetBranch'], 'develop'), eq(variables['Build.Reason'], 'PullRequest'))
  displayName: Develop Build stage
  jobs:  

# トリガー条件 : release ブランチをターゲットとして Pull Request が発生
- stage: ReleaseBuild
  condition: and(eq(variables['System.PullRequest.TargetBranch'], 'release'), eq(variables['Build.Reason'], 'PullRequest'))
  displayName: Release Build stage
  jobs:  

# トリガー条件 : master ブランチをターゲットとして Pull Request が発生
- stage: MasterBuild
  condition: and(eq(variables['System.PullRequest.TargetBranch'], 'master'), eq(variables['Build.Reason'], 'PullRequest'))
  displayName: Master Build stage
  jobs:  


# ********** Deploy ステージ **********
# feature deployment
- stage: FeatureDeploy
  displayName: Feature Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'akyamadamstest.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
              
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/feature/deployment.yml
                $(Pipeline.Workspace)/manifests/feature/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)

